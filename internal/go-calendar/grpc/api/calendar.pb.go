// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/calendar.proto

package calendar

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	EventId              string               `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	UserName             string               `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	EventName            string               `protobuf:"bytes,3,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	Note                 string               `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_46317338ada08f2e, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *Event) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Event) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *Event) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Event) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Event) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type CreateEventRequest struct {
	EventName            string               `protobuf:"bytes,1,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	Text                 string               `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	UserName             string               `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateEventRequest) Reset()         { *m = CreateEventRequest{} }
func (m *CreateEventRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEventRequest) ProtoMessage()    {}
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_46317338ada08f2e, []int{1}
}

func (m *CreateEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventRequest.Unmarshal(m, b)
}
func (m *CreateEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventRequest.Marshal(b, m, deterministic)
}
func (m *CreateEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventRequest.Merge(m, src)
}
func (m *CreateEventRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEventRequest.Size(m)
}
func (m *CreateEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventRequest proto.InternalMessageInfo

func (m *CreateEventRequest) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *CreateEventRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *CreateEventRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *CreateEventRequest) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *CreateEventRequest) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type Events struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Events) Reset()         { *m = Events{} }
func (m *Events) String() string { return proto.CompactTextString(m) }
func (*Events) ProtoMessage()    {}
func (*Events) Descriptor() ([]byte, []int) {
	return fileDescriptor_46317338ada08f2e, []int{2}
}

func (m *Events) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Events.Unmarshal(m, b)
}
func (m *Events) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Events.Marshal(b, m, deterministic)
}
func (m *Events) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Events.Merge(m, src)
}
func (m *Events) XXX_Size() int {
	return xxx_messageInfo_Events.Size(m)
}
func (m *Events) XXX_DiscardUnknown() {
	xxx_messageInfo_Events.DiscardUnknown(m)
}

var xxx_messageInfo_Events proto.InternalMessageInfo

func (m *Events) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type ResponseWithEvent struct {
	// Types that are valid to be assigned to Result:
	//	*ResponseWithEvent_Event
	//	*ResponseWithEvent_Error
	Result               isResponseWithEvent_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ResponseWithEvent) Reset()         { *m = ResponseWithEvent{} }
func (m *ResponseWithEvent) String() string { return proto.CompactTextString(m) }
func (*ResponseWithEvent) ProtoMessage()    {}
func (*ResponseWithEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_46317338ada08f2e, []int{3}
}

func (m *ResponseWithEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseWithEvent.Unmarshal(m, b)
}
func (m *ResponseWithEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseWithEvent.Marshal(b, m, deterministic)
}
func (m *ResponseWithEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseWithEvent.Merge(m, src)
}
func (m *ResponseWithEvent) XXX_Size() int {
	return xxx_messageInfo_ResponseWithEvent.Size(m)
}
func (m *ResponseWithEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseWithEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseWithEvent proto.InternalMessageInfo

type isResponseWithEvent_Result interface {
	isResponseWithEvent_Result()
}

type ResponseWithEvent_Event struct {
	Event *Event `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type ResponseWithEvent_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ResponseWithEvent_Event) isResponseWithEvent_Result() {}

func (*ResponseWithEvent_Error) isResponseWithEvent_Result() {}

func (m *ResponseWithEvent) GetResult() isResponseWithEvent_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ResponseWithEvent) GetEvent() *Event {
	if x, ok := m.GetResult().(*ResponseWithEvent_Event); ok {
		return x.Event
	}
	return nil
}

func (m *ResponseWithEvent) GetError() string {
	if x, ok := m.GetResult().(*ResponseWithEvent_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResponseWithEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResponseWithEvent_Event)(nil),
		(*ResponseWithEvent_Error)(nil),
	}
}

type ResponseWithEvents struct {
	// Types that are valid to be assigned to Result:
	//	*ResponseWithEvents_Events
	//	*ResponseWithEvents_Error
	Result               isResponseWithEvents_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ResponseWithEvents) Reset()         { *m = ResponseWithEvents{} }
func (m *ResponseWithEvents) String() string { return proto.CompactTextString(m) }
func (*ResponseWithEvents) ProtoMessage()    {}
func (*ResponseWithEvents) Descriptor() ([]byte, []int) {
	return fileDescriptor_46317338ada08f2e, []int{4}
}

func (m *ResponseWithEvents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseWithEvents.Unmarshal(m, b)
}
func (m *ResponseWithEvents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseWithEvents.Marshal(b, m, deterministic)
}
func (m *ResponseWithEvents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseWithEvents.Merge(m, src)
}
func (m *ResponseWithEvents) XXX_Size() int {
	return xxx_messageInfo_ResponseWithEvents.Size(m)
}
func (m *ResponseWithEvents) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseWithEvents.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseWithEvents proto.InternalMessageInfo

type isResponseWithEvents_Result interface {
	isResponseWithEvents_Result()
}

type ResponseWithEvents_Events struct {
	Events *Events `protobuf:"bytes,1,opt,name=events,proto3,oneof"`
}

type ResponseWithEvents_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ResponseWithEvents_Events) isResponseWithEvents_Result() {}

func (*ResponseWithEvents_Error) isResponseWithEvents_Result() {}

func (m *ResponseWithEvents) GetResult() isResponseWithEvents_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ResponseWithEvents) GetEvents() *Events {
	if x, ok := m.GetResult().(*ResponseWithEvents_Events); ok {
		return x.Events
	}
	return nil
}

func (m *ResponseWithEvents) GetError() string {
	if x, ok := m.GetResult().(*ResponseWithEvents_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResponseWithEvents) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResponseWithEvents_Events)(nil),
		(*ResponseWithEvents_Error)(nil),
	}
}

type ResponseWithEventID struct {
	// Types that are valid to be assigned to Result:
	//	*ResponseWithEventID_EventID
	//	*ResponseWithEventID_Error
	Result               isResponseWithEventID_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ResponseWithEventID) Reset()         { *m = ResponseWithEventID{} }
func (m *ResponseWithEventID) String() string { return proto.CompactTextString(m) }
func (*ResponseWithEventID) ProtoMessage()    {}
func (*ResponseWithEventID) Descriptor() ([]byte, []int) {
	return fileDescriptor_46317338ada08f2e, []int{5}
}

func (m *ResponseWithEventID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseWithEventID.Unmarshal(m, b)
}
func (m *ResponseWithEventID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseWithEventID.Marshal(b, m, deterministic)
}
func (m *ResponseWithEventID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseWithEventID.Merge(m, src)
}
func (m *ResponseWithEventID) XXX_Size() int {
	return xxx_messageInfo_ResponseWithEventID.Size(m)
}
func (m *ResponseWithEventID) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseWithEventID.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseWithEventID proto.InternalMessageInfo

type isResponseWithEventID_Result interface {
	isResponseWithEventID_Result()
}

type ResponseWithEventID_EventID struct {
	EventID string `protobuf:"bytes,1,opt,name=eventID,proto3,oneof"`
}

type ResponseWithEventID_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ResponseWithEventID_EventID) isResponseWithEventID_Result() {}

func (*ResponseWithEventID_Error) isResponseWithEventID_Result() {}

func (m *ResponseWithEventID) GetResult() isResponseWithEventID_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ResponseWithEventID) GetEventID() string {
	if x, ok := m.GetResult().(*ResponseWithEventID_EventID); ok {
		return x.EventID
	}
	return ""
}

func (m *ResponseWithEventID) GetError() string {
	if x, ok := m.GetResult().(*ResponseWithEventID_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResponseWithEventID) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResponseWithEventID_EventID)(nil),
		(*ResponseWithEventID_Error)(nil),
	}
}

type RequestEventByID struct {
	EventID              string   `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestEventByID) Reset()         { *m = RequestEventByID{} }
func (m *RequestEventByID) String() string { return proto.CompactTextString(m) }
func (*RequestEventByID) ProtoMessage()    {}
func (*RequestEventByID) Descriptor() ([]byte, []int) {
	return fileDescriptor_46317338ada08f2e, []int{6}
}

func (m *RequestEventByID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestEventByID.Unmarshal(m, b)
}
func (m *RequestEventByID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestEventByID.Marshal(b, m, deterministic)
}
func (m *RequestEventByID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestEventByID.Merge(m, src)
}
func (m *RequestEventByID) XXX_Size() int {
	return xxx_messageInfo_RequestEventByID.Size(m)
}
func (m *RequestEventByID) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestEventByID.DiscardUnknown(m)
}

var xxx_messageInfo_RequestEventByID proto.InternalMessageInfo

func (m *RequestEventByID) GetEventID() string {
	if m != nil {
		return m.EventID
	}
	return ""
}

type RequestUser struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestUser) Reset()         { *m = RequestUser{} }
func (m *RequestUser) String() string { return proto.CompactTextString(m) }
func (*RequestUser) ProtoMessage()    {}
func (*RequestUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_46317338ada08f2e, []int{7}
}

func (m *RequestUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestUser.Unmarshal(m, b)
}
func (m *RequestUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestUser.Marshal(b, m, deterministic)
}
func (m *RequestUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestUser.Merge(m, src)
}
func (m *RequestUser) XXX_Size() int {
	return xxx_messageInfo_RequestUser.Size(m)
}
func (m *RequestUser) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestUser.DiscardUnknown(m)
}

var xxx_messageInfo_RequestUser proto.InternalMessageInfo

func (m *RequestUser) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type ResponseSuccess struct {
	// Types that are valid to be assigned to Result:
	//	*ResponseSuccess_Response
	//	*ResponseSuccess_Error
	Result               isResponseSuccess_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ResponseSuccess) Reset()         { *m = ResponseSuccess{} }
func (m *ResponseSuccess) String() string { return proto.CompactTextString(m) }
func (*ResponseSuccess) ProtoMessage()    {}
func (*ResponseSuccess) Descriptor() ([]byte, []int) {
	return fileDescriptor_46317338ada08f2e, []int{8}
}

func (m *ResponseSuccess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseSuccess.Unmarshal(m, b)
}
func (m *ResponseSuccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseSuccess.Marshal(b, m, deterministic)
}
func (m *ResponseSuccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseSuccess.Merge(m, src)
}
func (m *ResponseSuccess) XXX_Size() int {
	return xxx_messageInfo_ResponseSuccess.Size(m)
}
func (m *ResponseSuccess) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseSuccess.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseSuccess proto.InternalMessageInfo

type isResponseSuccess_Result interface {
	isResponseSuccess_Result()
}

type ResponseSuccess_Response struct {
	Response string `protobuf:"bytes,1,opt,name=response,proto3,oneof"`
}

type ResponseSuccess_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ResponseSuccess_Response) isResponseSuccess_Result() {}

func (*ResponseSuccess_Error) isResponseSuccess_Result() {}

func (m *ResponseSuccess) GetResult() isResponseSuccess_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ResponseSuccess) GetResponse() string {
	if x, ok := m.GetResult().(*ResponseSuccess_Response); ok {
		return x.Response
	}
	return ""
}

func (m *ResponseSuccess) GetError() string {
	if x, ok := m.GetResult().(*ResponseSuccess_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResponseSuccess) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResponseSuccess_Response)(nil),
		(*ResponseSuccess_Error)(nil),
	}
}

func init() {
	proto.RegisterType((*Event)(nil), "Event")
	proto.RegisterType((*CreateEventRequest)(nil), "CreateEventRequest")
	proto.RegisterType((*Events)(nil), "Events")
	proto.RegisterType((*ResponseWithEvent)(nil), "ResponseWithEvent")
	proto.RegisterType((*ResponseWithEvents)(nil), "ResponseWithEvents")
	proto.RegisterType((*ResponseWithEventID)(nil), "ResponseWithEventID")
	proto.RegisterType((*RequestEventByID)(nil), "RequestEventByID")
	proto.RegisterType((*RequestUser)(nil), "RequestUser")
	proto.RegisterType((*ResponseSuccess)(nil), "ResponseSuccess")
}

func init() {
	proto.RegisterFile("api/calendar.proto", fileDescriptor_46317338ada08f2e)
}

var fileDescriptor_46317338ada08f2e = []byte{
	// 531 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x5d, 0x8f, 0xd2, 0x5c,
	0x10, 0xa6, 0x0b, 0x94, 0x32, 0x7d, 0xdf, 0xc8, 0x0e, 0xc6, 0xd4, 0xaa, 0x2b, 0xf6, 0x8a, 0x18,
	0x2d, 0x09, 0xab, 0x31, 0x7a, 0xb9, 0x8b, 0x01, 0x6e, 0x4c, 0x04, 0x89, 0xf1, 0x8a, 0x74, 0xe9,
	0xb8, 0x92, 0x40, 0x5b, 0xcf, 0x39, 0x6c, 0xd6, 0x3f, 0xaa, 0x7f, 0xc0, 0x1f, 0x62, 0x3a, 0xe7,
	0x94, 0xf0, 0x65, 0x96, 0x78, 0x77, 0xe6, 0xeb, 0x99, 0xe7, 0x99, 0x99, 0x03, 0x18, 0x65, 0xf3,
	0xce, 0x2c, 0x5a, 0x50, 0x12, 0x47, 0x22, 0xcc, 0x44, 0xaa, 0x52, 0xff, 0xe9, 0x75, 0x9a, 0x5e,
	0x2f, 0xa8, 0xc3, 0xd6, 0xd5, 0xea, 0x6b, 0x47, 0xcd, 0x97, 0x24, 0x55, 0xb4, 0xcc, 0x74, 0x42,
	0xf0, 0xdb, 0x82, 0xea, 0xfb, 0x1b, 0x4a, 0x14, 0x3e, 0x04, 0x87, 0xf2, 0xc7, 0x74, 0x1e, 0x7b,
	0x56, 0xcb, 0x6a, 0xd7, 0x47, 0x35, 0xb6, 0x87, 0x31, 0x3e, 0x82, 0xfa, 0x4a, 0x92, 0x98, 0x26,
	0xd1, 0x92, 0xbc, 0x13, 0x8e, 0x39, 0xb9, 0xe3, 0x43, 0xb4, 0x24, 0x7c, 0x02, 0xa0, 0xeb, 0x38,
	0x5a, 0xe6, 0x68, 0x9d, 0x3d, 0x1c, 0x46, 0xa8, 0x24, 0xa9, 0x22, 0xaf, 0xc2, 0x01, 0x7e, 0xe3,
	0x5b, 0x00, 0xa9, 0x22, 0xa1, 0xa6, 0x39, 0x1b, 0xaf, 0xda, 0xb2, 0xda, 0x6e, 0xd7, 0x0f, 0x35,
	0xd5, 0xb0, 0xa0, 0x1a, 0x7e, 0x2a, 0xa8, 0x8e, 0xea, 0x9c, 0x9d, 0xdb, 0xf8, 0x1a, 0x1c, 0x4a,
	0x62, 0x5d, 0x68, 0xdf, 0x59, 0x58, 0xa3, 0x24, 0xce, 0xad, 0xe0, 0xa7, 0x05, 0x78, 0x29, 0x28,
	0x52, 0xc4, 0x62, 0x47, 0xf4, 0x7d, 0x45, 0x52, 0xed, 0x70, 0xb7, 0x0e, 0x70, 0x57, 0x74, 0xab,
	0x8c, 0x64, 0x7e, 0x6f, 0xcf, 0xa2, 0xbc, 0x33, 0x8b, 0x6d, 0x61, 0x95, 0x7f, 0x15, 0x56, 0x3d,
	0x5e, 0x58, 0x1b, 0x6c, 0x56, 0x24, 0xf1, 0x0c, 0x6c, 0x66, 0x2e, 0x3d, 0xab, 0x55, 0x6e, 0xbb,
	0x5d, 0x3b, 0xd4, 0x52, 0x8d, 0x37, 0x98, 0xc0, 0xe9, 0x88, 0x64, 0x96, 0x26, 0x92, 0x3e, 0xcf,
	0xd5, 0x37, 0xbd, 0xf4, 0x33, 0xa8, 0x72, 0x98, 0xb5, 0xaf, 0x6b, 0x06, 0xa5, 0x91, 0x76, 0xe3,
	0x03, 0xa8, 0x92, 0x10, 0xa9, 0xd0, 0x23, 0x60, 0x7f, 0x6e, 0x5e, 0x38, 0x60, 0x0b, 0x92, 0xab,
	0x85, 0x0a, 0xbe, 0x00, 0xee, 0xc1, 0x4a, 0x7c, 0xb6, 0x41, 0x26, 0x07, 0xae, 0x69, 0x60, 0x39,
	0x28, 0x15, 0x7c, 0x8e, 0x80, 0x1e, 0x43, 0x73, 0x0f, 0x7a, 0xd8, 0x43, 0x1f, 0xcc, 0x61, 0xf6,
	0xf4, 0xc6, 0x06, 0xa5, 0xe2, 0x52, 0x7b, 0x47, 0x80, 0xbe, 0x80, 0x86, 0xd9, 0x3e, 0xe3, 0x5d,
	0xfc, 0x18, 0xf6, 0xd0, 0xdb, 0x41, 0x5c, 0xe3, 0x05, 0xcf, 0xc1, 0x35, 0xd9, 0x13, 0x49, 0x62,
	0x7b, 0xf9, 0xd6, 0xf6, 0xf2, 0x83, 0x8f, 0x70, 0xaf, 0xa0, 0x3b, 0x5e, 0xcd, 0x66, 0x24, 0x25,
	0x3e, 0x06, 0x47, 0x18, 0xd7, 0x9a, 0xeb, 0xda, 0x73, 0x37, 0xd9, 0xee, 0xaf, 0x13, 0x68, 0xf4,
	0xd3, 0x4b, 0xf3, 0xa7, 0xc7, 0x24, 0x6e, 0x48, 0xe0, 0x3b, 0x70, 0x37, 0x4e, 0x19, 0x9b, 0xe1,
	0xfe, 0x61, 0xfb, 0xf7, 0xc3, 0x03, 0x93, 0x0b, 0x4a, 0x78, 0x0e, 0x4e, 0x9f, 0xb4, 0x72, 0x3c,
	0x0d, 0x77, 0x07, 0xe1, 0xe3, 0x7e, 0x59, 0x50, 0xc2, 0x97, 0xe0, 0x4e, 0xb2, 0x78, 0xdd, 0xd0,
	0x1c, 0xc9, 0x5f, 0x7b, 0xbc, 0x02, 0xb7, 0x47, 0x0b, 0x2a, 0xd2, 0x0f, 0xb4, 0x69, 0x84, 0x3b,
	0x83, 0xe2, 0xaa, 0xff, 0xfb, 0xc4, 0x53, 0x36, 0x27, 0xf4, 0x5f, 0xb8, 0x31, 0x79, 0xbf, 0xb9,
	0xdf, 0x2c, 0xaf, 0x7a, 0x03, 0x4d, 0xd3, 0xeb, 0x36, 0x9b, 0x0b, 0x8a, 0x0f, 0xd6, 0x1e, 0x68,
	0x77, 0x65, 0xf3, 0xa7, 0x3a, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x16, 0xbc, 0xac, 0xa1, 0x35,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GoCalendarServerClient is the client API for GoCalendarServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoCalendarServerClient interface {
	// CreateEvent creates a new event and stores it in the DB. It returns an event id on success or error on failure.
	CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*ResponseWithEventID, error)
	// GetEventByID returns an event if it exists, otherwise it returns an error.
	GetEvent(ctx context.Context, in *RequestEventByID, opts ...grpc.CallOption) (*ResponseWithEvent, error)
	// UpdateEventByID updates an existing event and returns an event id on success or an error on failure.
	UpdateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*ResponseWithEventID, error)
	// DeleteEventByID deletes an event from the DB. It returns an event id on success or an error on failure.
	DeleteEvent(ctx context.Context, in *RequestEventByID, opts ...grpc.CallOption) (*ResponseSuccess, error)
	// GetUserEvents returns a list of events that belong to a specified user
	GetUserEvents(ctx context.Context, in *RequestUser, opts ...grpc.CallOption) (*ResponseWithEvents, error)
	// DeleteExpiredEvents deletes all the expired events that belong to a specified user
	DeleteExpiredEvents(ctx context.Context, in *RequestUser, opts ...grpc.CallOption) (*ResponseSuccess, error)
}

type goCalendarServerClient struct {
	cc grpc.ClientConnInterface
}

func NewGoCalendarServerClient(cc grpc.ClientConnInterface) GoCalendarServerClient {
	return &goCalendarServerClient{cc}
}

func (c *goCalendarServerClient) CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*ResponseWithEventID, error) {
	out := new(ResponseWithEventID)
	err := c.cc.Invoke(ctx, "/GoCalendarServer/CreateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goCalendarServerClient) GetEvent(ctx context.Context, in *RequestEventByID, opts ...grpc.CallOption) (*ResponseWithEvent, error) {
	out := new(ResponseWithEvent)
	err := c.cc.Invoke(ctx, "/GoCalendarServer/GetEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goCalendarServerClient) UpdateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*ResponseWithEventID, error) {
	out := new(ResponseWithEventID)
	err := c.cc.Invoke(ctx, "/GoCalendarServer/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goCalendarServerClient) DeleteEvent(ctx context.Context, in *RequestEventByID, opts ...grpc.CallOption) (*ResponseSuccess, error) {
	out := new(ResponseSuccess)
	err := c.cc.Invoke(ctx, "/GoCalendarServer/DeleteEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goCalendarServerClient) GetUserEvents(ctx context.Context, in *RequestUser, opts ...grpc.CallOption) (*ResponseWithEvents, error) {
	out := new(ResponseWithEvents)
	err := c.cc.Invoke(ctx, "/GoCalendarServer/GetUserEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goCalendarServerClient) DeleteExpiredEvents(ctx context.Context, in *RequestUser, opts ...grpc.CallOption) (*ResponseSuccess, error) {
	out := new(ResponseSuccess)
	err := c.cc.Invoke(ctx, "/GoCalendarServer/DeleteExpiredEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoCalendarServerServer is the server API for GoCalendarServer service.
type GoCalendarServerServer interface {
	// CreateEvent creates a new event and stores it in the DB. It returns an event id on success or error on failure.
	CreateEvent(context.Context, *CreateEventRequest) (*ResponseWithEventID, error)
	// GetEventByID returns an event if it exists, otherwise it returns an error.
	GetEvent(context.Context, *RequestEventByID) (*ResponseWithEvent, error)
	// UpdateEventByID updates an existing event and returns an event id on success or an error on failure.
	UpdateEvent(context.Context, *Event) (*ResponseWithEventID, error)
	// DeleteEventByID deletes an event from the DB. It returns an event id on success or an error on failure.
	DeleteEvent(context.Context, *RequestEventByID) (*ResponseSuccess, error)
	// GetUserEvents returns a list of events that belong to a specified user
	GetUserEvents(context.Context, *RequestUser) (*ResponseWithEvents, error)
	// DeleteExpiredEvents deletes all the expired events that belong to a specified user
	DeleteExpiredEvents(context.Context, *RequestUser) (*ResponseSuccess, error)
}

// UnimplementedGoCalendarServerServer can be embedded to have forward compatible implementations.
type UnimplementedGoCalendarServerServer struct {
}

func (*UnimplementedGoCalendarServerServer) CreateEvent(ctx context.Context, req *CreateEventRequest) (*ResponseWithEventID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}
func (*UnimplementedGoCalendarServerServer) GetEvent(ctx context.Context, req *RequestEventByID) (*ResponseWithEvent, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvent not implemented")
}
func (*UnimplementedGoCalendarServerServer) UpdateEvent(ctx context.Context, req *Event) (*ResponseWithEventID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (*UnimplementedGoCalendarServerServer) DeleteEvent(ctx context.Context, req *RequestEventByID) (*ResponseSuccess, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEvent not implemented")
}
func (*UnimplementedGoCalendarServerServer) GetUserEvents(ctx context.Context, req *RequestUser) (*ResponseWithEvents, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserEvents not implemented")
}
func (*UnimplementedGoCalendarServerServer) DeleteExpiredEvents(ctx context.Context, req *RequestUser) (*ResponseSuccess, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteExpiredEvents not implemented")
}

func RegisterGoCalendarServerServer(s *grpc.Server, srv GoCalendarServerServer) {
	s.RegisterService(&_GoCalendarServer_serviceDesc, srv)
}

func _GoCalendarServer_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoCalendarServerServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GoCalendarServer/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoCalendarServerServer).CreateEvent(ctx, req.(*CreateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoCalendarServer_GetEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestEventByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoCalendarServerServer).GetEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GoCalendarServer/GetEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoCalendarServerServer).GetEvent(ctx, req.(*RequestEventByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoCalendarServer_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoCalendarServerServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GoCalendarServer/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoCalendarServerServer).UpdateEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoCalendarServer_DeleteEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestEventByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoCalendarServerServer).DeleteEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GoCalendarServer/DeleteEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoCalendarServerServer).DeleteEvent(ctx, req.(*RequestEventByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoCalendarServer_GetUserEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoCalendarServerServer).GetUserEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GoCalendarServer/GetUserEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoCalendarServerServer).GetUserEvents(ctx, req.(*RequestUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoCalendarServer_DeleteExpiredEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoCalendarServerServer).DeleteExpiredEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GoCalendarServer/DeleteExpiredEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoCalendarServerServer).DeleteExpiredEvents(ctx, req.(*RequestUser))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoCalendarServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GoCalendarServer",
	HandlerType: (*GoCalendarServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEvent",
			Handler:    _GoCalendarServer_CreateEvent_Handler,
		},
		{
			MethodName: "GetEvent",
			Handler:    _GoCalendarServer_GetEvent_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _GoCalendarServer_UpdateEvent_Handler,
		},
		{
			MethodName: "DeleteEvent",
			Handler:    _GoCalendarServer_DeleteEvent_Handler,
		},
		{
			MethodName: "GetUserEvents",
			Handler:    _GoCalendarServer_GetUserEvents_Handler,
		},
		{
			MethodName: "DeleteExpiredEvents",
			Handler:    _GoCalendarServer_DeleteExpiredEvents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/calendar.proto",
}
