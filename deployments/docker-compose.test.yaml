version: "3.7"
services:
  # PostgreSQL container setup
  postgres:
    image: postgres:10.0-alpine
    container_name: pgs_db
    environment:
      - POSTGRES_USER=calendar_user
      - POSTGRES_PASSWORD=calendar
      - POSTGRES_DB=calendar_db
    volumes:
      - ../db/db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "54321:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U calendar_user"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      db-net:
        aliases:
          - postgres

  # RabbitMQ container setup
  rabbitmq:
    image: rabbitmq:3.8.0-alpine
    container_name: rmq
    ports:
      - "56721:5672"
    healthcheck:
      test: [ "CMD", "nc", "-z", "rabbitmq", "5672" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      rabbit-net:
        aliases:
          - rabbitmq

  # Watcher service
  watcher:
    container_name: watcher
    build:
      context: ../.
      dockerfile: ./deployments/watcher/Dockerfile
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - db-net
      - rabbit-net
    restart: on-failure

  # Go Calendar service
  go-calendar:
    container_name: gcs
    build:
      context: ../.
      dockerfile: ./deployments/go-calendar/Dockerfile
    volumes:
      - ../configs:/opt/go-calendar/configs
    depends_on:
      - postgres
    ports:
      - "7070:7070"
    networks:
      db-net:
        aliases:
          - go-calendar
    restart: on-failure

  # Integration tests
  integration_tests:
    build:
      context: ../.
      dockerfile: ./deployments/integration-test/Dockerfile
    depends_on:
      - postgres
      - go-calendar
      - watcher
      - rabbitmq
    restart: on-failure
    networks:
      - db-net
      - rabbit-net

# Network definitions
networks:
  db-net:
    driver: bridge
  rabbit-net:
    driver: bridge
